name: 🚀 Pipeline

on:
  push:
    branches: ["**"]

env:
  DOCKER_REGISTRY: ghcr.io

jobs:
  release-please:
    name: ✨ Release Please
    if: github.ref_name == 'main'
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    outputs:
      created: ${{ steps.release.outputs.releases_created }}
      app-created: ${{ steps.release.outputs.app--release_created }}
      server-created: ${{ steps.release.outputs.server--release_created }}
      keycloak-created: ${{ steps.release.outputs.keycloak--release_created }}
    steps:
      - name: 🗝 Get app token
        uses: actions/create-github-app-token@v1
        id: app-token
        with:
          app-id: ${{ vars.EMMA_APP_ID }}
          private-key: ${{ secrets.EMMA_APP_PRIVATE_KEY }}

      - name: ✨ Release Please
        id: release
        uses: googleapis/release-please-action@v4
        with:
          config-file: release-please/config.json
          manifest-file: release-please/manifest.json
          token: ${{ steps.app-token.outputs.token }}

  debug-release-please:
    name: 🐞 Debug
    runs-on: ubuntu-latest
    needs:
      - release-please
    steps:
      - name: 📣 Outputs
        run: |
          echo '✨ Releases: ${{ needs.release-please.outputs.created }}'
          echo '📱 App:       ${{ needs.release-please.outputs.app-created }}'
          echo '🚂 Server:   ${{ needs.release-please.outputs.server-created }}'
          echo '🕵️‍♂️ Keycloak: ${{ needs.release-please.outputs.keycloak-created }}'

  build-app:
    name: 📱 Build app
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: app

    steps:
      - name: 🛒 Checkout
        uses: actions/checkout@v4

      - name: 🏞️ Setup environment
        uses: ./.github/actions/setup-environment
        with:
          flutter: true

      - name: 🏗 Restore dependencies
        run: just pub-get

      - name: 🎨 Analyze
        run: just analyze

      - name: 🛠️ Build
        run: just build appbundle

  build-server:
    name: 🚂 Build server
    runs-on: ubuntu-latest

    steps:
      - name: 🛒 Checkout
        uses: actions/checkout@v4

      - name: 🏞️ Setup environment
        uses: ./.github/actions/setup-environment
        with:
          dotnet: true

      - name: 🛠️ Build
        run: just target build:build

  publish-server:
    name: 🐳 Publish server docker image
    runs-on: ubuntu-latest
    needs:
      - release-please
      - build-server
    if: needs.release-please.outputs.server-created
    permissions:
      contents: read
      packages: write
    steps:
      - name: 🛒 Checkout
        uses: actions/checkout@v4

      - name: 🏞️ Setup environment
        uses: ./.github/actions/setup-environment
        with:
          dotnet: true
          docker: true

      - name: 🗝️ Login to container registry.
        uses: docker/login-action@v3
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: 🐳 Build and push docker image
        run: just target docker:publish

  publish-keycloak:
    name: 🐳 Publish keycloak docker image
    runs-on: ubuntu-latest
    needs:
      - release-please
    if: needs.release-please.outputs.keycloak-created
    permissions:
      contents: read
      packages: write
    steps:
      - name: 🛒 Checkout
        uses: actions/checkout@v4

      - name: 🏞️ Setup environment
        uses: ./.github/actions/setup-environment
        with:
          dotnet: true
          docker: true

      - name: 🗝️ Login to container registry.
        uses: docker/login-action@v3
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: 🐳 Build and push docker image
        run: just target keycloak:publish

  deploy:
    name: 🚀 Trigger deployment
    runs-on: ubuntu-latest
    needs:
      - publish-server
      - publish-keycloak
    # always(): run even if one of 'needs' is skipped
    # contains(needs.*.result, 'success') does not work
    # see: https://github.com/actions/runner/issues/1251#issuecomment-1691111412
    if: >
      always() && (
        needs.publish-server.result == 'success' ||
        needs.publish-keycloak.result == 'success'
      )
    steps:
      - name: 🗝 Get app token
        uses: actions/create-github-app-token@v1
        id: app-token
        with:
          app-id: ${{ vars.EMMA_APP_ID }}
          private-key: ${{ secrets.EMMA_APP_PRIVATE_KEY }}
          owner: ${{ github.repository_owner }}
          repositories: emma-private

      - name: 🚀 Trigger deployment
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ steps.app-token.outputs.token }}
          repository: OpenCleanEnergy/emma-private
          event-type: deploy
          client-payload: '{ "ref": "${{github.ref}}" }'
