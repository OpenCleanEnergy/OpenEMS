set fallback

# Lists all available recipes
@default:
  just --list

# dart fix and format
format:
  dart fix --apply
  dart format {{justfile_directory()}}

# flutter analyze
analyze:
  flutter analyze

# Get the current package's dependencies
pub-get:
  flutter pub get

# Generates code using build_runner
generate-code:
  dart run build_runner clean
  dart run build_runner build --delete-conflicting-outputs
  @echo 'Fixing backend_api.swagger.dart because of version mismatch.'
  sed -i 's/Iterable<dynamic>? interceptors/List<Interceptor>? interceptors/g' \
    'lib/application/backend_api/swagger_generated_code/backend_api.swagger.dart'
  just format

generate-icons: pub-get
  dart run flutter_launcher_icons

# Build the app
build subcommand environment='production':
  flutter build {{subcommand}} \
  $([ '{{subcommand}}' == 'web' ] || echo '--debug' ) \
  --dart-define-from-file .env.{{environment}}

# Run the app
run device-id='linux' environment='development':
  flutter run \
  --device-id {{device-id}} \
  --dart-define-from-file .env.{{environment}}

# Start Android Device Bridge server as root. Stores adb executable in environment variable because `sudo` changes $PATH.
adb-start:
  ADB=$(command -v adb) && \
  $ADB kill-server && \
  sudo $ADB start-server

# Install the app on connected device
install-app environment='production': (build 'apk' 'production')
  flutter install
