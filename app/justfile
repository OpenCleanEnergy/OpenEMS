set fallback
set windows-shell := ["pwsh.exe", "-NoLogo", "-Command"]

# Lists all available recipes
@default:
  just --list

# Upgrade the flutter SDK
upgrade-sdk:
  flutter upgrade

# dart fix and format
format:
  dart fix --apply
  dart format .

# flutter analyze
analyze:
  flutter analyze

# Get the current package's dependencies
pub-get:
  flutter pub get

# Generates code using build_runner
generate-code: && format
  dart run build_runner clean
  dart run build_runner build --delete-conflicting-outputs

generate-icons: pub-get
  dart run flutter_launcher_icons

# Build the app
build subcommand environment='production':
  flutter build {{subcommand}} \
  {{ if subcommand == "web" { "" } else { "--debug" } }} \
  --dart-define-from-file .env.{{environment}}

# Run the app
run device-id='linux' environment='development':
  flutter run \
  --device-id {{device-id}} \
  --dart-define-from-file .env.{{environment}}

# Start Android Device Bridge server as root. Stores adb executable in environment variable because `sudo` changes $PATH.
adb-start:
  ADB=$(command -v adb) && \
  $ADB kill-server && \
  sudo $ADB start-server

# Install the app on connected device
install-app environment='production': (build 'apk' 'production')
  flutter install --debug

# Convert screenshots for play store
play-store-convert:
  cd assets/google-play-store/screenshots && ./convert.sh
